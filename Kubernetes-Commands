 1  vi cluster.sh
    2  chmod 777 cluster.sh
    3  sh cluster.sh
    4  aws --version
    5  kubectl
    6  snap install kubectl --classic
    7  kubectl
    8  eksctl
    9  clear
   10  history
   11  aws configure
   12  aws confiure
   13  aws configure
   14  eksctl create cluster --name clahan-test-cluster --version 1.31 --region us-east-1 --nodegroup-name clahan-test-linux --node-type t2.medium --nodes 2 --nodes-min 2 --nodes-max 5 --managed
   15  eksctl create cluster --name clahan-test-cluster1 --version 1.31 --region us-east-1 --nodegroup-name clahan-test-linux1 --node-type t2.medium --nodes 2 --nodes-min 2 --nodes-max 5 --managed
   16  aws eks update-kubeconfig --name clahan-test-linux1 --region us-east-1
   17  aws eks update-kubeconfig --name clahan-test-cluster1 --region us-east-1
   18  kubectl get nodes
   19  kubectl get ns
   20  kubectl get all -n kube-public
   21  kubectl get all -n kube-system
   22  kubectl create ns test-ns
   23  kubectl get ns
   kubectl run test-pod --image muralisocial123/organic-app-web:latest --port 5656 -n test-ns
   29  kubectl get pods
   30  kubectl get pods -n test-ns
   31  kubectl describe pod test-pod
   32  kubectl describe pod test-pod -n test-ns

   ______________________________________________________________________________
   25/03/2025 - Commands 
      22  kubectl apply -f ns.yaml
   23  kubectl get ns
   24  kubectl get nodes -o wide
   25  kubectl get nodes
   26  kubectl get nodes -o wide
   27  clear
   28  git pull
   29  ls
   30  kubectl apply -f pod.yaml
   31  kubectl get pods
   32  kubectl get pods -n test-ns
   33  kubectl describe pod oragnic-pod -n test-ns
   34  kubectl get events
   35  clear
   36  kubectl get pods -o wide
   37  kubectl get pods -o wide -n test-ns
   38  curl
   39  curl 192.168.50.254:5656
   40  kubectl get pods
   41  clear
   42  kubectl top pods
   43  kubectl top nodes
   44  kubectl top pods
   45  kubectl top pods -n test-ns
   46  kubectl describe pod oragnic-pod -n test-ns
    48  kubectl get ns
   49  kubectl get pods -n test-ns
   50  kubectl delete pod test-pod
   51  kubectl delete pod test-pod -n test-ns
   52  kubectl get pods -n test-ns
   53  git pull
   54  kubectl apply -f rs.yaml
   55  kubectl get rs
   56  kubectl describe rs sample-rs
   57  kubectl get pods
   58  kubectl delete pod sample-rs-f2z4f
   59  kubectl get pods -o wide
   60  kubectl delete pod sample-rs-jjt6v sample-rs-m88nd
      63  git pull
   64  kubectl apply -f deployment.yaml
   65  kubectl ger deploymets
   66  kubectl get deploymets
      63  git pull
   64  kubectl apply -f deployment.yaml
   65  kubectl ger deploymets
   66  kubectl get deploymets
   61  kubectl get pods -o wide
   67  kubectl get deployments
   68  kubectl get rs
   69  kubectl get pods -o wide
   70  kubectl get deployments
   71  kubectl get pods
   72  kubectl run -it web-app-deployment-7575f8988f-wtdqg -- /bin/sh
   73  kubectl run -it web-app-deployment-7575f8988f-wtdqg -- /bin/bash
   74  kubectl exec -it web-app-deployment-7575f8988f-wtdqg -- /bin/bash
   75  kubectl exec -it web-app-deployment-7575f8988f-wtdqg -- /bin/sh
   76  git pull
   77  kubectl apply -f deployment.yaml
   78  kubectl get svc
   79  kubectl get pods
   80  kubectl describe svc web-app-deployment-svc
   81  kubectl get svc
   82  kubectl get nodes -o wide
   83  kubectl get hpa
   84  git pull
   85  kubectl apply -f deployment.yaml
   86  kubectl get hap
   87  kubectl get hpa
   88  sudo apt update && sudo apt install apache2-utils -y
   91  sudo apt update && sudo apt install apache2-utils -y
   92  ab -V
   93  ab -n 20000 -c 1000 http://a20d287a3c9d84acab76b6018ab6d001-203260571.us-east-1.elb.amazonaws.com:5657/
   94  kubectl top pods
   95  kubectl get pods
   96  kubectl get hap
   97  kubectl get hpa
   ***************************************************8
    kubectl apply -f 01-rbac.yaml
   25  kubectl get ns
   26  kubectl get roles
   27  kubectl get roles -n prod-ns
   28  kubectl get rolebindings -n prod-ns
   ************************************************* ArgoCD Deployments 
   34  git clone -b dev https://github.com/Msocial123/AWS-Retail-App.git
   35  ls
   36  cd AWS-Retail-App/
   37  ls
   38  kubectl create namespace argocd
   39  kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
   40  kubectl get ns
   41  kubectl get all -n argocd
   42  Kubectl create ns retail
   43  kubectl create ns retail
   44  curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
   45  sudo install -m 555 argocd-linux-amd64 /usr/local/bin/argocd
   46  rm argocd-linux-amd64
   47  kubectl patch svc argocd-server -n argocd -p '{"spec": {"type": "LoadBalancer"}}'
   48  kubectl port-forward svc/argocd-server -n argocd 8080:443
   49  kubectl get all -n argocd
   50  argocd admin initial-password -n argocd
   51  argocd login ad3beedead25948ce8942a31a372966f-1581313888.us-east-1.elb.amazonaws.com:80
   52  argocd account update-password
   53  kubectl config get-contexts -o name
   54  argocd cluster add ntrainer@clahan-example-cluster.us-east-1.eksctl.io
   55  kubectl create namespace argo-rollouts
   56  kubectl apply -n argo-rollouts -f https://github.com/argoproj/argo-rollouts/releases/latest/download/install.yaml
   57  helm
   58  snap install helm  --classic
   59  ls
   60  helm install retail-app Retail-chart/
   61  helm list
   62  kubectl get all





